#!/usr/bin/env python
# coding: utf-8

# In[58]:


import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import scipy.stats as sts
get_ipython().run_line_magic('matplotlib', 'inline')
import math


# # Определяем распределение Лапласса #

# 
# Информацию можно почитать [тут](https://ru.wikipedia.org/wiki/%D0%A0%D0%B0%D1%81%D0%BF%D1%80%D0%B5%D0%B4%D0%B5%D0%BB%D0%B5%D0%BD%D0%B8%D0%B5_%D0%9B%D0%B0%D0%BF%D0%BB%D0%B0%D1%81%D0%B0)
# 

# Среднее:β
# Дисперсия:β

# In[132]:


laplace_rv = sts.laplace(5) #задаем функцию
sample = laplace_rv.rvs(1000)   #Сделаем выборку из 1000 значений


# In[53]:


print(sample)


# In[133]:


#посчитаем среднее и дисперсию
xm=1.#минимальное значение
E=5#среднее(мат ожидание)
D=2#дисперсия
print (E)
print (D)


# In[149]:


plt.hist(sample, label='Гистограмма', density=True)
plt.ylabel('fraction of samples')
plt.xlabel('$x$')
x = np.linspace(0,10,1000) #определяем массив точек для построения плотности распределения
plt.title('Выборка из 1000 значений ')
pdf = laplace_rv.pdf(x)   #вычисляем значения плотности распределения от выборки
#строим гистрограмму выборки и теоретическую функцию распределения
plt.plot(x, pdf, label='Теоретическая плотность', alpha=0.5)
plt.legend()




# # Оценим распределение выборочного среднего случайной величины при разных объёмах выборок #

# ## n=5 ##

# In[148]:


n=5 
sample5=np.array([])#обозначим массив выборочных средних
i=1
while i <= 1000:#цикл генерации случайных выборок количества n из функции
    sample5i = laplace_rv.rvs(n)#генерация выборки
    mean5i=sum(sample5i)/n#определение выборочного среднего (в.с.)
    sample5=np.append(sample5,mean5i)#добавляем в массив новое значение в.с.
    i+=1
#определим параметры нормального распределения описывающие массив 1000 в.с. при n=5
E=5#среднее Лапласса
D=2#дисперсия Лапласса
D5=D/n#дисперсия для нормального распределения приближающего выборку средних
sigma5=math.sqrt(D5)#сигма для нормального распределения выборки средних
norm5 = sts.norm(E, sigma5)#определяем нормальное распределение с расчетными характеристиками Лапласса
pdf5 = norm5.pdf(x)#получаем плотность распределения
#строим гистограмму массива средних при n=5 и плотность описывающую этот массив нормального распределения
plt.hist(sample5, density=True)

x = np.linspace(3,7,1000)
plt.plot(x, pdf5, label='PDF(n=5)')

plt.ylabel('number of samples')
plt.xlabel('$x$')
plt.legend(loc='best')


# ## n=30 ##

# In[147]:


n=30
sample30=np.array([])#обозначим массив выборочных средних
i=1
while i <= 1000:#цикл генерации случайных выборок количества n из функции
    sample30i = laplace_rv.rvs(n)#генерация выборки
    mean30i=sum(sample30i)/n#определение выборочного среднего (в.с.)
    sample30=np.append(sample30,mean30i)#добавляем в массив новое значение в.с.
    i+=1
#определим параметры нормального распределения описывающие массив 1000 в.с. при n=5
E=5#среднее Лапласса
D=2#дисперсия Лапласса
D30=D/n#дисперсия для нормального распределения приближающего выборку средних
sigma30=math.sqrt(D30)#сигма для нормального распределения выборки средних
norm30 = sts.norm(E, sigma30)#определяем нормальное распределение с расчетными характеристиками Лапласса
pdf30 = norm30.pdf(x)#получаем плотность распределения
#строим гистограмму массива средних при n=30 и плотность описывающую этот массив нормального распределения
plt.hist(sample30, density=True)

x = np.linspace(3,7,1000)
plt.plot(x, pdf30, label='PDF(n=30)')

plt.ylabel('number of samples')
plt.xlabel('$x$')
plt.legend(loc='best')


# ## n=100 ##

# In[146]:


n=100
sample100=np.array([])#обозначим массив выборочных средних
i=1
while i <= 1000:#цикл генерации случайных выборок количества n из функции
    sample100i = laplace_rv.rvs(n)#генерация выборки
    mean100i=sum(sample100i)/n#определение выборочного среднего (в.с.)
    sample100=np.append(sample100,mean100i)#добавляем в массив новое значение в.с.
    i+=1
#определим параметры нормального распределения описывающие массив 1000 в.с. при n=5
E=5#среднее Лапласса
D=2#дисперсия Лапласса
D100=D/n#дисперсия для нормального распределения приближающего выборку средних
sigma100=math.sqrt(D100)#сигма для нормального распределения выборки средних
norm100 = sts.norm(E, sigma100)#определяем нормальное распределение с расчетными характеристиками Лапласса
pdf100 = norm100.pdf(x)#получаем плотность распределения
#строим гистограмму массива средних при n=100 и плотность описывающую этот массив нормального распределения
plt.hist(sample100, density=True)

x = np.linspace(3,7,1000)
plt.plot(x, pdf100, label='PDF(n=100)')

plt.ylabel('number of samples')
plt.xlabel('$x$')
plt.legend(loc='best')


# ## n=1000 ##

# In[145]:


n=1000
sample1000=np.array([])#обозначим массив выборочных средних
i=1
while i <= 1000:#цикл генерации случайных выборок количества n из функции
    sample1000i = laplace_rv.rvs(n)#генерация выборки
    mean1000i=sum(sample1000i)/n#определение выборочного среднего (в.с.)
    sample1000=np.append(sample1000,mean1000i)#добавляем в массив новое значение в.с.
    i+=1
#определим параметры нормального распределения описывающие массив 1000 в.с. при n=5
E=5#среднее Лапласса
D=2#дисперсия Лапласса
D1000=D/n#дисперсия для нормального распределения приближающего выборку средних
sigma1000=math.sqrt(D1000)#сигма для нормального распределения выборки средних
norm1000 = sts.norm(E, sigma1000)#определяем нормальное распределение с расчетными характеристиками Лапласса
pdf1000 = norm1000.pdf(x)#получаем плотность распределения
#строим гистограмму массива средних при n=1000 и плотность описывающую этот массив нормального распределения
plt.hist(sample1000, density=True)

x = np.linspace(3,7,1000)
plt.plot(x, pdf1000, label='PDF(n=1000)')

plt.ylabel('number of samples')
plt.xlabel('$x$')
plt.legend(loc='best')


# Для выполнения задания была выбрана функция распределения Лапласса . Были выполнены условия задачи: построены для четырех разных n (5, 30, 100, 1000) по 1000 случайных выборок, измерены их выборочные средние и составлены соостветствующие массивы, по массивам выборочных средних построены гистограммы распределения, исходя из теоретических данных определены соответствующие каждому n параметры распределений для апроксимации, по полученным параметрам построены функции нормального распределения для каждого n поверх соответствующих гистограмм.
# 
# По полученным графикам наблюдается увелечение точности апроксимации выборочного среднего значения непрерывной случайной величины описываемой распределением Лапласса.Более качественный результат наблюдается при больших n, в нашем случае при n = 1000.

# In[ ]:




